# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: flow-links # Identifier for your extension
version: 0.0.1 # Follow semver versioning
specVersion: v1beta # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Flow Links

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Replaces Dynamic Links with ease.

icon: icon.png

license: Apache-2.0 # https://spdx.org/licenses/

# Public URL for the source code of your extension
sourceUrl: https://github.com/jauntybrain/flow-links-extension

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field
apis:
  - apiName: firebasehosting.googleapis.com
    reason: Hosting API is required to push link accreditations

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field
roles:
  - role: firebasehosting.admin
    reason: Required to support custom domain as past of the flow links accreditation with Apple/Google

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: initialize
    type: firebaseextensions.v1beta.function
    description: >-
      Describe the task performed when the function is triggered by a lifecycle
      event
    properties:
      location: ${LOCATION}
      taskQueueTrigger: {}
  - name: api
    type: firebaseextensions.v1beta.function
    description: >-
      HTTP request-triggered main app function
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: "nodejs16"

lifecycleEvents:
  onInstall:
    function: initialize
    processingMessage: Intitializing the extension
  # onUpdate:
  #   function: myOtherTaskFunction
  #   processingMessage: Setting up your extension
  # onConfigure:
  #   function: myOtherTaskFunction
  #   processingMessage: Setting up your extension

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true

  - param: IOS_BUNDLE_ID
    label: Bundle ID of your iOS application
    description: >
      The Cloud Storage bucket where images that are to be processed are located.
      API requests with input urls or paths that are not inside this bucket will be
      dropped.
    type: string
    example: com.example.myawesomeapp
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid bundle ID
    required: true

  - param: IOS_TEAM_ID
    label: Team ID of your iOS application
    description: >
      The Cloud Storage bucket where images that are to be processed are located.
      API requests with input urls or paths that are not inside this bucket will be
      dropped.
    type: string
    example: 12ABCD57D3
    validationRegex: ^([0-9A-Z]*)$
    validationErrorMessage: Invalid team ID
    required: true

  - param: ANDROID_BUNDLE_ID
    label: Bundle ID of your Android application
    description: >
      The Cloud Storage bucket where images that are to be processed are located.
      API requests with input urls or paths that are not inside this bucket will be
      dropped.
    type: string
    example: com.example.myawesomeapp
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid bundle ID
    required: true

  - param: ANDROID_SHA
    label: Android application SHA256
    description: >
      The Cloud Storage bucket where images that are to be processed are located.
      API requests with input urls or paths that are not inside this bucket will be
      dropped.
    type: string
    example: ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid SHA256
    required: true
